cnidentd
========
A small, simple ident server in Haskell

cnidentd is a small ident server written in Haskell.  It is modular, multithreaded, and RFC 1413 compliant.

cnidentd supports modular ident providers, supporting multiple strategies (and platforms) for supplying ident information.  A simple, single-static-user provider is included, as well as fully-functioning providers for OS X and Linux.  The providers for OS X and Linux spawn a subprocess to actually figure out the user associated with a connection, and read back in the value.  On Linux this may be brittle due to lack of testing with various distributions' lsof versions.

cnidentd must currently be run as root.  On OS X, privilege dropping should be simple.  On Linux, lsof needs root to access other users' connections, so privilege dropping may not be feasible.

The build is cabalized.

sidentd
=======
A tiny static ident server in Haskell

sidentd is derived from the same code as cnidentd, but only supports a simple static response strategy.  It is tiny, multithreaded, and should be quite secure.

sidentd must be run as root.  Immediately after binding the port, and before daemonizing or listening for any connections, sidentd drops privileges to the daemon user and group.  If your system does not have daemon as uid=1,gid=1, make the appropriate changes to the program.

Build with
 > ghc --make Sidentd.hs -o sidentd

Run with
 > sudo ./sident USER
where USER is the username you want returned for queries.

sidentd doesn't yet support rc.d/ style start and stop options, so just kill it the old fashioned way.